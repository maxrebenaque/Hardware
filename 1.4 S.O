# E1. Exercise 4. Operating System structure

## Introduction

We can divide operating system in following parts:
- Kernel
- Memory manager
- Input/Output manager
- Filesystem manager

## Contents

Let's analyze operating system behaviour on each module. We will be using linux comands to see what's going on on a linux OS.

## Delivery

### Kernel

1. **Where does the kernel reside in disk?** Write down the command with the output and tell exactly where it is the kernel.

- It resides in the /boot folder,you can see the kernel with the command `uname -r`

2. **How can we show the actual kernel version that it is loaded on our system**? Please show command output

- uname -r

3. **How can we show the detected hardware done by the kernel?** Please show command output.
- lspci


4. **How can we show the modules (drivers) actually in use?** Which module it is being used for video graphics card?
- lsmod
- In my pc is i915


### Memory manager

1. **What is the 'cache' memory that shows the command 'free -m'?** Show also the command output

-Cache memory, also called CPU memory, is high-speed static random access memory that a computer microprocessor
  can access more quickly than it can access regular random access memory.



2. **What is the 'swap' memory that shows the command 'free -m'?**

- It's a partition that can be used like a "slow ram" when the computer gets out of memory 


3. **How does the memory manager handle an out-of-memory problem?**
- With the OOM Killer that kills the process that uses more rescourses

4. **How can we show the actual 'out of memory score' of a Gimp instance that it is running?**
- ps aux | grep gimp 


### Input/Output manager

1. **How can we list all the interrupts that it is aware our Operating System?** 
-  cat /proc/interrupts
       
2. **In multiprocessor systems, how does the operating system distribute interrupts by default?** How can we change the default behaviour?
- Each interrupt is taken by the one diferent core.
- You change the priorities with = tuned-adm list

3. **How does an operating system control a device that has no interrupts?** Explain the process 
- It controls all the device by polling, so the polling its that the CPU asks all the time the device for new data,
    and the device provides it when it haves something to trade.


4. **What will happen if two applications want to send data through network device at the same time?**

- The O.S will give priority to one of both.

### Filesystem manager

1. **Which is the typical linux folder structure?** Describe what it is and the use of each folder.
- **bin**: Contains base executables which are required for run level 1 
- **boot**: Contains all the boot related files and the Kernel 
- **dev**:  Contains the hardware files
- **etc**:  Contains all the systems configuration files
- **home**: THis is the directory where there are all the users folders are created
- **lib**:  This directory contains kernel modules , drivers
- **lib64**: Same as above but for 64 bits
- **lost+found**: This is the directory which stores things that are not properly closed 
- **media**: Directory for mounting files systems on removable devices
- **mnt**: Directory for temporarily mounted filesystems.
- **opt**: Optional software packages
- **proc**: Contains the information about the Linux System
- **root**: Home directory of the root user
- **run**: It is a folder for processes to store data in it
- **sbin**: This folder constains executables that are for changing system parameters
- **srv**: Contains data for services
- **sys**: Contains information about the device
- **tmp**: Temporary directory 
- **usr**: Contains subdirectories for programs
- **var**: Contains various system files

2. **How can we:?**
- Move a file that resides in /usr/local/src/file.md to the folder /opt:
    - mv  /usr/local/src/file.md /opt

- Copy a file that resides in /usr/local/src/file.md to the folder /opt:
    - cp /usr/local/src/file.md /opt

- Move a file in /usr/file.md to /usr/local if we are currently in path /usr/local:
    - mv /usr/local/src/file.md 
- Create the file .gitignore using command 'touch' and then try to list it (ls). What happens?
    - The files that starts with a dot in linux are hidden.
    
